version: '3.7'

services:
    minio:
        restart: always
        image: minio/minio:RELEASE.2021-06-14T01-29-23Z
        container_name: mlflow_s3
        expose:
            - "9000"
        command: server /data
        networks: 
            - storage
        environment:
            - MINIO_ACCESS_KEY=${AWS_ACCESS_KEY_ID}
            - MINIO_SECRET_KEY=${AWS_SECRET_ACCESS_KEY}
        volumes:
            - minio_data:/data
    
    create_mlflow_bucket:
        image: minio/mc:RELEASE.2019-07-17T22-13-42Z
        depends_on:
            - minio
        container_name: create_mlflow_bucket
        networks: 
            - storage
        env_file:
            - .env
        entrypoint: >
            /bin/sh -c "
            until (/usr/bin/mc config host add minio http://minio:9000 ${AWS_ACCESS_KEY_ID} ${AWS_SECRET_ACCESS_KEY}) do echo '...waiting...' && sleep 1; done;
            /usr/bin/mc mb --ignore-existing minio/${MLFLOW_BUCKET_NAME}
            /usr/bin/mc policy set public minio/${MLFLOW_BUCKET_NAME};
            /usr/bin/mc mb --ignore-existing minio/${DATA_REPO_BUCKET_NAME};
            /usr/bin/mc policy download minio/${DATA_REPO_BUCKET_NAME};
            exit 0;
            "

    db:
        restart: always
        image: mysql/mysql-server:5.7.28
        container_name: mlflow_db
        expose:
            - "3306"
        networks:
            - backend
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        volumes:
            - dbdata:/var/lib/mysql
        ports:
            - "33060:3306"
    web:
        restart: always
        build: ./mlflow
        image: mlflow_server
        container_name: mlflow_server
        expose:
            - "5000"
        networks:
            - frontend
            - backend
            - storage
        environment:
            - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
            - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
            - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
        command: mlflow server --backend-store-uri mysql+pymysql://${MYSQL_USER}:${MYSQL_PASSWORD}@db:3306/${MYSQL_DATABASE} --default-artifact-root s3://mlflow/ --host 0.0.0.0        


    nginx:
        restart: always
        build: ./nginx
        image: mlflow_nginx
        container_name: mlflow_nginx
        ports:
            - "8080:80"
            - "9000:9000"
        networks:
            - frontend
            - storage
        depends_on:
            - web
            - minio

networks:
    frontend:
        driver: bridge
    backend:
        driver: bridge
    storage:
        driver: bridge

volumes:
    dbdata:
    minio_data:
